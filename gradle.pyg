// ClassSetAnalysis.java
private void recurseDependentClasses(Set<String> visitedClasses, Set<String> resultClasses, Set<GeneratedResource> resultResources, Iterable<String> dependentClasses) {
^^IIterator var5 = dependentClasses.iterator();
^^Iwhile(var5.hasNext()) {
^^I^^IString d = (String)var5.next();
^^I^^Iif (visitedClasses.add(d)) {
^^I^^I^^Iif (!this.isNestedClass(d)) {
^^I^^I^^I^^IresultClasses.add(d);
^^I^^I^^I}
^^I^^I^^IDependentsSet currentDependents = this.getDependents(d);
^^I^^I^^Iif (!currentDependents.isDependencyToAll()) {
^^I^^I^^I^^IresultResources.addAll(currentDependents.getDependentResources());
^^I^^I^^I^^Ithis.recurseDependentClasses(visitedClasses, resultClasses, resultResources, currentDependents.getDependentClasses());
^^I^^I^^I}
^^I^^I}
^^I}
}
