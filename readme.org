#+latex_class: cn-article
#+title: Android Study Plan
#+author: deepwaterooo

* Daily updates
** 调整作息
- 经过的过去几个月（9月到12月几个整月）的6:00am-11pm作息后，我觉得自己白天的头脑思维和精力还是不够好（常常还是会脑袋有点儿昏），应该是到了需要再切换一下，晚上12:30-1am左右休息入睡，早上6am起床，中午12:00-1:30左右午休90分钟的作息
- 新的作自己下，早上的精力会相对差一些，4.5个小时，三个睡眠周期上午的脑袋相对会比较昏；但如果中午能够入睡，下午和晚上的头脑会比较清醒，学习的效率也会提升不少
- 前天晚上12休息，昨天中午是调整午休的第一天，昨天中午一个鬼窝里的恶鬼室友在厨房作饭，故意乒乒乓乓吵了别人整个午休的一两个小时，但最终还是睡着了。。。。。。
- 昨天晚上12:30-1am入睡，今天中午无法deep sleep入睡，浅眠，今天晚上应该需要1am左右才上床准备休息，希望明天中午能够午休休息好
- 
- 这段时间仍然会总结一些安卓方面基础，希望自己在头脑比较清醒的状态下能够真正理解原理，用到项目上。过了这个周末，会希望回去把leetcode里想写的难题写完，接下来也都会参加自1月8日开始起的每个周六的周赛，这个周六应该还是不会参加
- 
- 会把view相关的部分、安卓应用的性能代优化，以及异步这三大版块再总结一下。有时间的话，activity fragments再加强一下
- 因为需要准备一个面试，这几天不更新算法系列，只准备安卓面试
- win 10 wsl 1 ubuntu 18 adb configuration done, not complicated, once search for solutions, and config, it works.
- api levle 30 androidx basic project environment can be configured, but dynamic fragment add not done yet, switched back to api 28 temporatorily
- wsl 1 ubuntu 18 adb logcat is so slow. after 9pm yesterday, 150K lines of log, I could only adb logcat previous project samplefragments, can can not grab any FirstFragment nor Second Fragment Log.i info. may switch laptop back to Mac, but it has only 8GB memory, and internet too slow for that laptop
- today will review major components, as well small details, notes summaries to move on
- *恶鬼们昨天晚上今天早上又疯狂作案一晚，一个故意晚回来，用洗手间，用厨房，半夜一两点钟还在故意厨房里开厨导柜吵别人；一个今天早上五点钟便受恶房东暗示指使，故意开车库噪音极大的声响，早上五点钟便故意吵醒别人休息，实在是无恶不作（它有昨天晚上下班后到休息前一晚上的时间他不提前装车，非要等到早上五点钟故意把别人吵醒，另一个贱畜牲的做法是在别人晚上入睡前故意吵别人，贱蓄牲们的做法还不够猖狂吗?）*
- BroadcastReceiver sample project runs though easily. Will look into ContentProvider projects too today, all of them are not complicated.
- ContentProvider Interprocess communication projects are connected well too. One functions as server, the other as client, not complicated at all.
- The coding interview is done (due to the interface reasons, the 120 minutes test was submitted in about 60 minutes by mistake, the coding test interface does not false-positive submit proof), expecting the final round of interview, while at the same time, I am returning back to algorithms, and tomorrow there is a weekly contest too.
 
* 职场弱弱的奔溃瞬间（+1）
- 联系我安排面试相关的按照名字来看，应该是一个美国人吧，关于文化、语言等，这样的hr写邮件与candidate沟通应该会相对比较顺利一点
  
[[./pic/buddy.png]]
  - 偶这个职场弱弱，瞬间被这五个字母吓傻了，怎么也不敢跟他们联系，直到下午约定的时候中介打电话进来。
    - 为什么不敢主动给它们打电话呢？因为三大中文有它们自己的媒体喉舌，不顺应他们的逼迫，他们会采用极端手段，当年陈冠希等事件的爆出，最终落入他们手中的不有张柏芝吗？他们为达到目的，会不择手段（范冰冰案，郑爽案，吴亦凡，哪个不是出自己他们的狠辣手段？）。我有自己的底线，打了那个电话，正是他们想要逼别人做牵线木偶，逼别人回中国大陆帮他们圈钱，他们会不择手段地逼死别人在美国的职场生涯。
    - 一个buddy，他们派个美国人打进邮件里不打紧，但如果我主动了，如果他们采取极端手段，一定要把别人逼死，我做不出！我守得住自己的底线，就不怕他们逼
    - 毕竟，还是他们自己下套，他们自己去玩儿他们自己的吧
  - 他们自己也说了，男子连杀父母姊妹三人，不想杀妹妹，妹妹总哭。。。。。。18年3月4月是它们发动黑势力封杀了别人的职场生涯。现在别问别人为什么会怕，为什么会没有安全感。没有安全感，我就永远守着这个表哥。
- 记得上次与另一个公司的第一轮面试快结束时问及第二轮的coding test是怎么样的，会是像leetcode之类的刷题界面一样吗？我是一个emacs依赖症重症患者，离开command line based editor emacs，我不会写代码。记得当时与面试官沟通这个问题的时候，他说到会sharing screen, 这个我们面试者就可以在自己最熟悉与舒适的工作环境中尽可能高效地答题、写出理想的代码。
- 今天早上，当我第一时间读及收件箱邮件里的reminder, 
  
  [[./pic/req.png]]
  - 作为一个久经沙场、久经面试的弱弱，当读到这样的coding test reminder要求，弱弱的内心瞬间奔溃、溃不成军（像山顶瀑布里的水哗啦啦地流不下停）。。。。。。这究竟是要干什么？？？
  - 好在，作为一个久经沙场，久经面试的弱弱，死猪不怕开水烫，大不了就是不是command line based editor的界面会写得慢、会写得不顺，会无数次敲错字符，会写出来的代码不成型，bug多，极度降低效率，但它好歹也还是一个test不是？这种test的机会也不是很多呀，大不了我敲不好这样的代码，得个0分，又如何？
  - 于是，崩溃了的弱弱还是硬着头皮明知山有虎地爬去把coding test给做了。。。
- 回想2012年9月还是10月继自己装linux系统把电脑弄坏之后，被自己作业c++代码里的一个bug吓得魂飞魄散，急忙给代课教师写邮件求救。。。。。。木有想到，原来这么多年过去了，内心里，偶们还是这么一个表哥眼中永远长不大的弱弱（应该说，内心里，心理上，我愿做亲爱的表哥眼中哪怕是永远也长不大的弱弱，很是留恋他的目光）。。。。。。 
- 我想申请过国内大陆一个类似leetcode的做题网站，但被网站封死了，正如leetcode会根据时间点故意坑或踩一个人，国内的那个做题网站想来与他们黑势力相关，他们从来不想我专业上强大，他们更想要逼别人去开餐馆，对，就是逼，只可惜，他们逼错对象了，他们逼得了别人，逼不了我，狮子座的人拥有强大的自信，岂是他们想踩个时间点就能把别人的自信粉碎得了的？！！！做梦。我会每天都变得更加强大。。。。。。
* 系统服务篇
:clock1: DONE: Android 如何启动？
[x] DONE: Android 应用进程启动流程
[ ] 什么是系统服务？
[ ] ActivityManagerService
[ ] SystemServer
[x] DONE: Android 应用安装过程源码解析
[ ] WindowManagerService
[ ] Zoyote 前世今生

* 通信框架篇
[x] Binder 完全解析
[x] DONE: Binder 完全解析（一）概述
[x] DONE: Binder 完全解析（二）设计详解
[x] DONE: Binder 完全解析（三）AIDL实现原理分析
[x] Handler 通信框架
[x] DONE: Handler消息机制源码解析

* 应用组件篇
[ ] Application 是什么？
DONE: Context 分析
[ ] Activity 组件分析
[x] DONE: Activity生命周期是如何实现的
[ ] Services 组件分析
[ ] ContentProvider 组件分析
[ ] Broadcast 组件分析

* 珠玑拾遗
[ ] Gradle 用法
[ ] 混淆一二事

Andriod系统开发

* Android操作系统概述
Android平台介绍；Android平台特性；Android平台架构；Android Navtive C/C++程序开发；Android NDK；Native开发方式与JAVA开发方式比较。
* Android开发环境搭建
Android SDK介绍；Eclipse ADT插件；Android模拟器开发。
* Android项目结构分析
资源管理(Resources)分析；drawable分析；layout分析；Activity分析；Intent分析；Service分析；Content分析。
* Android UI设计
标准控件的使用；设计开发自定义控件；Layout布局的使用；触摸/按键（UI Events）事件处理方法；View，SurfaceView，Canvas,Paint类分析使用；显示文本以及显示特殊效果文本；绘图及显示图片；实现动画效果。
* Intent Receive
Intent的作用和目的；属性讲解；Android定义解析Intent；AndroidManifest.xml深入分析。
* Service
什么是Service，如何使用Service，Service的生命周期，BroadcastReceiver的使用。
* Content Provider
SQLite介绍，创建Content Providers，使用Content Providers，使用URI语法进行增删改查。
* Android高级应用开发
访问本地通讯录；网络连接的相关知识；流媒体的处理；URLConnection和HttpURLConnection的应用；
HttpClient的分析；本地文件浏览管理；音视频播放处理；Widget应用开发。
* Android程序发布部署建
Android 调试桥；启用logcat日志调试；模拟器上安装删除软件；打包* 签名和安装软件到设备。
* Android 底层架构分析
移植Android到新的硬件平台；需要支持Linux 操作系统的硬件平台架构分析；支持Android的Linux内核特性分析；为Linux内核增加Android特性；移植Android Debug Bridge调试接口；编写／移植Android内核驱动；硬件支持double frame buffer/page flipping；bionic库移植与优化；Dalvik Vm移植；第三方应用程序移植；建立Android移植开发平台；新的嵌入式处理器引入的Android相关问题；获得高效的Android工具链。
* Android移植
支持ARM11的Linux-2.6.28内核新特性简介；移植LCD double buffer驱动；移植触摸屏驱动；移植Android键盘驱动；移植Wifi驱动支持Android上网功能；移植电源管理驱动，支持Android电池管理；部署Android系统到实际ARM11平台。
* 阶段项目实战与测试
通过对ITelephony接口和ISms接口以及AIDL在Android程序中的开发应用，开发一个打电话和发短信的程序。

* 自定义view Android 11 api level android M 
** gradle.properties
#+BEGIN_SRC xm
android.useAndroidX=true
landroid.enableJetifier=true
#+END_SRC
- 什么是Jetifier？ 例如，要使用androidx打包的依赖项创建新项目，此新项目需要在gradle.properties文件中添加以下行：

java version 8
 compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

import android.os.Bundle;
import android.support.design.widget.FloatingActionButton;
import android.support.design.widget.Snackbar;
import android.view.View;
import android.view.Menu;
import android.view.MenuItem;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.snackbar.Snackbar;

    <com.me.generalprac.CustomTitleView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"/>
    <include layout="@layout/custom_title"/>
